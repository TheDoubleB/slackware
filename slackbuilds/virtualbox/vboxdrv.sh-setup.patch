--- a/src/VBox/Installer/linux/vboxdrv.sh       2020-04-09 19:42:04.000000000 +0200
+++ b/src/VBox/Installer/linux/vboxdrv.sh       2020-04-21 20:19:18.672122275 +0200
@@ -451,70 +451,7 @@
 # setup_script
 setup()
 {
-    begin_msg "Building VirtualBox kernel modules" console
-    log "Building the main VirtualBox module."
-    if ! myerr=`$BUILDINTMP \
-        --save-module-symvers /tmp/vboxdrv-Module.symvers \
-        --module-source "$MODULE_SRC/vboxdrv" \
-        --no-print-directory install 2>&1`; then
-        "${INSTALL_DIR}/check_module_dependencies.sh" || exit 1
-        log "Error building the module:"
-        module_build_log "$myerr"
-        failure "Look at $LOG to find out what went wrong"
-    fi
-    log "Building the net filter module."
-    if ! myerr=`$BUILDINTMP \
-        --use-module-symvers /tmp/vboxdrv-Module.symvers \
-        --module-source "$MODULE_SRC/vboxnetflt" \
-        --no-print-directory install 2>&1`; then
-        log "Error building the module:"
-        module_build_log "$myerr"
-        failure "Look at $LOG to find out what went wrong"
-    fi
-    log "Building the net adaptor module."
-    if ! myerr=`$BUILDINTMP \
-        --use-module-symvers /tmp/vboxdrv-Module.symvers \
-        --module-source "$MODULE_SRC/vboxnetadp" \
-        --no-print-directory install 2>&1`; then
-        log "Error building the module:"
-        module_build_log "$myerr"
-        failure "Look at $LOG to find out what went wrong"
-    fi
-    if test -e "$MODULE_SRC/vboxpci"; then
-        log "Building the PCI pass-through module."
-        if ! myerr=`$BUILDINTMP \
-            --use-module-symvers /tmp/vboxdrv-Module.symvers \
-            --module-source "$MODULE_SRC/vboxpci" \
-            --no-print-directory install 2>&1`; then
-            log "Error building the module:"
-            module_build_log "$myerr"
-            failure "Look at $LOG to find out what went wrong"
-        fi
-    fi
-    rm -f /etc/vbox/module_not_compiled
-    depmod -a
-    sync
-    succ_msg "VirtualBox kernel modules built"
-    # Secure boot on Ubuntu and Debian.
-    if test -n "$HAVE_SEC_BOOT" &&
-        type update-secureboot-policy >/dev/null 2>&1; then
-        SHIM_NOTRIGGER=y update-secureboot-policy --new-key
-    fi
-    if test -f "$DEB_PUB_KEY" && test -f "$DEB_PRIV_KEY"; then
-        HAVE_DEB_KEY=true
-        for i in $MODULE_LIST; do
-            kmodsign sha512 /var/lib/shim-signed/mok/MOK.priv \
-                /var/lib/shim-signed/mok/MOK.der \
-                /lib/modules/"$KERN_VER"/misc/"$i".ko
-        done
-        # update-secureboot-policy "expects" DKMS modules.
-        # Work around this and talk to the authors as soon
-        # as possible to fix it.
-        mkdir -p /var/lib/dkms/vbox-temp
-        update-secureboot-policy --enroll-key 2>/dev/null ||
-            begin_msg "Failed to enroll secure boot key." console
-        rmdir -p /var/lib/dkms/vbox-temp 2>/dev/null
-    fi
+    echo "Not implemented! Please use the virtualbox-kernel.SlackBuild available at SlackBuilds.org instead."
 }
 
 dmnstatus()
